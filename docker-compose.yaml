services:
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_USER: invoflow
      POSTGRES_PASSWORD: invoflow
      POSTGRES_DB: invoflow_dev
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U invoflow"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - invoflow-net

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - invoflow-net

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1026:1025"
      - "8026:8025"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - invoflow-net

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@invoflow.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - invoflow-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - maven_cache:/root/.m2
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/invoflow_dev
      SPRING_DATASOURCE_USERNAME: invoflow
      SPRING_DATASOURCE_PASSWORD: invoflow
      SPRING_JPA_HIBERNATE_DDL-AUTO: update
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_MAIL_HOST: mailhog
      SPRING_MAIL_PORT: 1025
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      pgadmin:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - invoflow-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080
      NODE_ENV: development
      NEXT_TELEMETRY_DISABLED: 1
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - invoflow-net

volumes:
  postgres_data:
  maven_cache:
  frontend_node_modules:

networks:
  invoflow-net:
    driver: bridge
